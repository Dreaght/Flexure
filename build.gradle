plugins {
  id 'java'
  id 'application'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '2.25.0'
}

group 'org.dreaght'
version '2.1.2.1'

repositories {
  mavenCentral()
  maven {
    url = "https://repository.aspose.com/repo/"
  }
}

ext {
  junitVersion = '5.10.0'
}

sourceCompatibility = '17'
targetCompatibility = '17'

application {
  mainModule = 'org.dreaght.flexure'
  mainClass = 'org.dreaght.flexure.FlexureApplication'
}

javafx {
  version = '17.0.6'
  modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
  compileOnly 'org.projectlombok:lombok:1.18.32'
  annotationProcessor 'org.projectlombok:lombok:1.18.32'

  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

  implementation("com.aspose:aspose-cad:24.3")
}

tasks.withType(Exec) {
  environment "JAVA_OPTS", "-Dprism.verbose=true -XX:+ShowCodeDetailsInExceptionMessages"
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
  options.compilerArgs += [
          '--module-path', classpath.asPath,
          '--add-modules', 'javafx.controls,javafx.fxml,java.desktop,lombok,aspose.cad'
  ]
}

test {
  useJUnitPlatform()
}

jlink {
  imageZip = project.file("${buildDir}/distributions/Flexure-${version}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  addOptions '--add-modules', 'javafx.controls,javafx.fxml,java.desktop,org.dreaght.flexure,aspose.cad'
  launcher {
    name = 'Flexure'
    jvmArgs = ['-Dprism.verbose=true', '-XX:+ShowCodeDetailsInExceptionMessages']
  }
}

jlinkZip {
  group = 'distribution'
}

def jpackageOutputDir = "$buildDir/jpackage"

task jpackageWindows(type: Exec) {
  dependsOn tasks.jlink
  onlyIf { org.gradle.internal.os.OperatingSystem.current().isWindows() }
  doFirst {
    mkdir(jpackageOutputDir)
  }
  commandLine 'jpackage', '--type', 'exe',
          '--dest', jpackageOutputDir,
          '--name', 'Flexure',
          '--module', 'org.dreaght.flexure/org.dreaght.flexure.FlexureApplication',
          '--module-path', "${buildDir}/image",
          '--runtime-image', "${buildDir}/image",
          '--main-class', 'org.dreaght.flexure.FlexureApplication',
          '--java-options', '-Dprism.verbose=true -XX:+ShowCodeDetailsInExceptionMessages',
          '--verbose'
}

task jpackageLinux(type: Exec) {
  dependsOn tasks.jlink
  onlyIf { org.gradle.internal.os.OperatingSystem.current().isLinux() }
  doFirst {
    mkdir(jpackageOutputDir)
  }
  commandLine 'jpackage', '--type', 'rpm',
          '--dest', jpackageOutputDir,
          '--name', 'Flexure',
          '--module', 'org.dreaght.flexure/org.dreaght.flexure.FlexureApplication',
          '--module-path', "${buildDir}/image",
          '--runtime-image', "${buildDir}/image",
          '--main-class', 'org.dreaght.flexure.FlexureApplication',
          '--java-options', '-Dprism.verbose=true -XX:+ShowCodeDetailsInExceptionMessages',
          '--verbose'
}

task jpackageMac(type: Exec) {
  dependsOn tasks.jlink
  onlyIf { org.gradle.internal.os.OperatingSystem.current().isMacOsX() }
  doFirst {
    mkdir(jpackageOutputDir)
  }
  commandLine 'jpackage', '--type', 'pkg',
          '--dest', jpackageOutputDir,
          '--name', 'Flexure',
          '--module', 'org.dreaght.flexure/org.dreaght.flexure.FlexureApplication',
          '--module-path', "${buildDir}/image",
          '--runtime-image', "${buildDir}/image",
          '--main-class', 'org.dreaght.flexure.FlexureApplication',
          '--java-options', '-Dprism.verbose=true -XX:+ShowCodeDetailsInExceptionMessages',
          '--verbose'
}

task jpackageAll {
  dependsOn jpackageWindows, jpackageLinux, jpackageMac
}
